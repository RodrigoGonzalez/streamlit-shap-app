[tool.poetry]
name = "shap-app"
version = "0.5.0"
description = "A comprehensive application for interpreting machine learning models using SHAP values"
authors = ["Rodrigo Gonzalez  <r@rodrigo-gonzalez.com>"]
license = "MIT"
readme = "README.md"

keywords = [
    "SHAP",
    "Machine Learning",
    "Model Interpretation",
    "Python",
    "Data Science",
    "AI",
    "Artificial Intelligence",
    "Feature Importance",
    "Game Theory",
    "Predictive Modeling",
    "Data Analysis",
    "Modeling"
]

classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Typing :: Typed",
]

packages = [
    { include = "shap_app", from = "src" }
]

include = ["README.md", "LICENSE", "CHANGELOG.md", "assets/shap_header.svg"]


[tool.poetry.scripts]
shap-app = 'shap_app.__main__:cli'


[tool.poetry.dependencies]
python = ">=3.10,<3.12"
streamlit = "^1.26.0"
streamlit-aggrid = "^0.3.4.post3"
streamlit-option-menu = "^0.3.6"
streamlit-shap = "^1.0.2"
pydantic = "^2.3.0"
llvmlite = "^0.40.1"
#pyarrow = "^12.0.1"
numpy = ">=1.21,<1.25"
pandas = "^2.1.0"
shap = "^0.42.1"
scipy = "^1.11.2"
statsmodels = "^0.14.0"
scikit-learn = "^1.3.0"
feature-engine = "^1.6.1"
xgboost = "^1.7.6"
catboost = "^1.2.1"
protobuf = "^4.24.2"
#google-api-python-client = "^2.97.0"
#google-auth = "^2.22.0"
#google-auth-httplib2 = "^0.1.0"
altair = "^5.1.1"
click = "^8.1.7"
pdfkit = "^1.0.0"
#wkhtmltopdf = "^0.2"
vega-datasets = "^0.9.0"
streamlit-tags = "^1.2.8"
#python-dotenv = "^1.0.0"
pydantic-settings = "^2.0.3"
#pendulum = "^2.1.2"
joblib = "^1.3.2"
strictyaml = "^1.7.3"
cmake = "^3.27.2"
matplotlib = "^3.7.2"
typer = "^0.9.0"
cython = "^3.0.2"
lightgbm = "^4.0.0"
setuptools = "^68.1.2"
numba = "^0.57.1"
seaborn = "^0.12.2"


[tool.poetry.group.dev.dependencies]
pre-commit = "^3.3.3"
ipython = "^8.14.0"
isort = "^5.12.0"
black = "^23.7.0"
autoflake = "^2.2.0"
pyupgrade = "^3.10.1"
flake8 = "^6.1.0"
commitizen = "^3.7.0"
pip-tools = "^7.3.0"


[tool.poetry.group.mypy.dependencies]
mypy = "^1.5.1"
typing-extensions = "^4.7.1"


[tool.poetry.group.test.dependencies]
pytest = "^7.4.0"
pytest-cov = "^4.1.0"
pytest-mock = "^3.11.1"
pytest-asyncio = "^0.21.1"
pytest-randomly = "^3.15.0"


[tool.poetry.group.docs.dependencies]
mkdocs = "^1.5.2"
mkdocs-material = "^9.2.5"
mkdocstrings = "^0.22.0"


[tool.commitizen]
name = "cz_conventional_commits"
version = "0.5.0"
tag_format = "v$version"
version_scheme = "semver"
version_provider = "poetry"
update_changelog_on_bump = true
major_version_zero = true
commit = true
tag = true
push = true
version_files = [
    "pyproject.toml:version",
    "src/shap_app/__init__.py:__version__",
]
changelog_file = "CHANGELOG.md"
github_repo = "RodrigoGonzalez/streamlit-shap-app"

[tool.isort]
profile = "black"
skip_glob = ["docs"]
line_length = 100
multi_line_output = 4
force_single_line = true
src_paths = ["src", "tests", "scripts"]
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
known_first_party = ["shap_app"]
#known_third_party = ["flake8"]

[tool.black]
line-length = 100
target-version = ["py310", "py311"]
include = '\.pyi?$'
exclude = '''
    /(
        \.git
      | \.mypy_cache
      | \.mypy_html_report
      | \.venv
      | _build
      | build
      | dist
      | docs
      | example_repos
    )/
'''

[tool.mypy]
# output
show_error_codes = true
show_column_numbers = true
show_error_context = true
show_traceback = true
# 3rd party import
ignore_missing_imports = true
# dynamic typing
disallow_any_unimported = false
disallow_any_expr = false
disallow_any_decorated = false
disallow_any_explicit = false
disallow_any_generics = false
disallow_subclassing_any = false
# platform
python_version = "3.10"
# untyped
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
# None and Optional
no_implicit_optional = true
# strictness
explicit_package_bases = true
# Warnings
warn_return_any = false
warn_unreachable = true
# Misc
pretty = true
exclude = [
    "scripts",
    "tests",
]

[tool.coverage.run]
plugins = ["covdefaults"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
